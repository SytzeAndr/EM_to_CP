% auto generated file, representing a neural network
% features in: ['buy1', 'buy2']
% features out: ['success_ratio', 'spoil_ratio']
% layerCount: 4
% layerWidth: 6

% use these to access output parameters
var float: success_ratio;
var float: spoil_ratio;


% Node constraints
% Layer 0
var float: n_0_0_3layer;
constraint (n_0_0_3layer = max((-0.6047012209892273 * buy1 + 0.4016667604446411 * buy2 + 0.23410692811012268), 0));
var float: n_0_1_3layer;
constraint (n_0_1_3layer = max((-0.4074420928955078 * buy1 + 0.3091166317462921 * buy2 + -0.015258103609085083), 0));
var float: n_0_2_3layer;
constraint (n_0_2_3layer = max((0.22948110103607178 * buy1 + -0.39354395866394043 * buy2 + 0.39221498370170593), 0));
var float: n_0_3_3layer;
constraint (n_0_3_3layer = max((0.19999635219573975 * buy1 + 0.5915346741676331 * buy2 + -1.0206886529922485), 0));
var float: n_0_4_3layer;
constraint (n_0_4_3layer = max((0.5351971983909607 * buy1 + -0.649093508720398 * buy2 + 0.15188691020011902), 0));
var float: n_0_5_3layer;
constraint (n_0_5_3layer = max((0.4634099006652832 * buy1 + 0.3000238537788391 * buy2 + -0.5204540491104126), 0));
% Layer 1
var float: n_1_0_3layer;
constraint (n_1_0_3layer = max((-0.22581025958061218 * n_0_0_3layer + -0.23101511597633362 * n_0_1_3layer + -0.3631053864955902 * n_0_2_3layer + 0.4915606379508972 * n_0_3_3layer + 0.002548704156652093 * n_0_4_3layer + 0.35797321796417236 * n_0_5_3layer + 0.14518864452838898), 0));
var float: n_1_1_3layer;
constraint (n_1_1_3layer = max((-0.34922271966934204 * n_0_0_3layer + 0.3305462598800659 * n_0_1_3layer + 0.4251370429992676 * n_0_2_3layer + -0.05466366559267044 * n_0_3_3layer + -0.22960130870342255 * n_0_4_3layer + -0.049902673810720444 * n_0_5_3layer + 0.3230504095554352), 0));
var float: n_1_2_3layer;
constraint (n_1_2_3layer = max((0.4120725095272064 * n_0_0_3layer + 0.2076452672481537 * n_0_1_3layer + 0.30326002836227417 * n_0_2_3layer + 0.05669695883989334 * n_0_3_3layer + 0.5190261006355286 * n_0_4_3layer + -0.03645021840929985 * n_0_5_3layer + 0.2367381453514099), 0));
var float: n_1_3_3layer;
constraint (n_1_3_3layer = max((0.33455488085746765 * n_0_0_3layer + 0.5530825853347778 * n_0_1_3layer + 0.630104660987854 * n_0_2_3layer + 0.5540006756782532 * n_0_3_3layer + 0.6207306981086731 * n_0_4_3layer + 0.5848358273506165 * n_0_5_3layer + 0.23783469200134277), 0));
var float: n_1_4_3layer;
constraint (n_1_4_3layer = max((0.31474563479423523 * n_0_0_3layer + 1.143934726715088 * n_0_1_3layer + 0.3964973986148834 * n_0_2_3layer + 0.21900656819343567 * n_0_3_3layer + 0.0963926836848259 * n_0_4_3layer + 0.26789963245391846 * n_0_5_3layer + 0.20270079374313354), 0));
var float: n_1_5_3layer;
constraint (n_1_5_3layer = max((-0.650606632232666 * n_0_0_3layer + -0.5726366639137268 * n_0_1_3layer + -0.13628117740154266 * n_0_2_3layer + 0.13607589900493622 * n_0_3_3layer + -0.005140720866620541 * n_0_4_3layer + 0.15516525506973267 * n_0_5_3layer + -0.050854090601205826), 0));
% Layer 2
var float: n_2_0_3layer;
constraint (n_2_0_3layer = max((0.04062211886048317 * n_1_0_3layer + 0.3018442392349243 * n_1_1_3layer + 0.3765578866004944 * n_1_2_3layer + 0.20668455958366394 * n_1_3_3layer + 0.5781722068786621 * n_1_4_3layer + -0.2473323941230774 * n_1_5_3layer + 0.13409048318862915), 0));
var float: n_2_1_3layer;
constraint (n_2_1_3layer = max((0.3509286940097809 * n_1_0_3layer + -0.20070339739322662 * n_1_1_3layer + -0.11291471868753433 * n_1_2_3layer + 0.2678614854812622 * n_1_3_3layer + 0.09973014146089554 * n_1_4_3layer + -0.018661214038729668 * n_1_5_3layer + -0.1862867921590805), 0));
var float: n_2_2_3layer;
constraint (n_2_2_3layer = max((-0.41521701216697693 * n_1_0_3layer + 0.7796410918235779 * n_1_1_3layer + 0.560745120048523 * n_1_2_3layer + 0.3715178966522217 * n_1_3_3layer + 0.030184190720319748 * n_1_4_3layer + -0.43311652541160583 * n_1_5_3layer + -0.03265591338276863), 0));
var float: n_2_3_3layer;
constraint (n_2_3_3layer = max((0.1949482560157776 * n_1_0_3layer + -0.024188769981265068 * n_1_1_3layer + 0.3031006455421448 * n_1_2_3layer + 0.08635751157999039 * n_1_3_3layer + 0.3830631971359253 * n_1_4_3layer + -0.3702232539653778 * n_1_5_3layer + -0.38590115308761597), 0));
var float: n_2_4_3layer;
constraint (n_2_4_3layer = max((0.3398817777633667 * n_1_0_3layer + -0.4506831169128418 * n_1_1_3layer + -0.28255435824394226 * n_1_2_3layer + 0.16820953786373138 * n_1_3_3layer + -0.12368324398994446 * n_1_4_3layer + -0.15279622375965118 * n_1_5_3layer + 0.22023148834705353), 0));
var float: n_2_5_3layer;
constraint (n_2_5_3layer = max((0.4232623875141144 * n_1_0_3layer + -0.32720547914505005 * n_1_1_3layer + 0.2358095496892929 * n_1_2_3layer + 0.5876237154006958 * n_1_3_3layer + 0.2900635302066803 * n_1_4_3layer + -0.1000945195555687 * n_1_5_3layer + 0.11386914551258087), 0));
% Layer 3
var float: n_3_0_3layer;
constraint (n_3_0_3layer = max((0.0621756985783577 * n_2_0_3layer + 0.44619420170783997 * n_2_1_3layer + -0.21995966136455536 * n_2_2_3layer + -0.1845790445804596 * n_2_3_3layer + 0.33796927332878113 * n_2_4_3layer + 0.1509290188550949 * n_2_5_3layer + 0.02116176299750805), 0));
var float: n_3_1_3layer;
constraint (n_3_1_3layer = max((0.22456519305706024 * n_2_0_3layer + -0.29222965240478516 * n_2_1_3layer + 0.6064924001693726 * n_2_2_3layer + 0.44033119082450867 * n_2_3_3layer + -0.3766525983810425 * n_2_4_3layer + 0.46271538734436035 * n_2_5_3layer + 0.03393558785319328), 0));
var float: n_3_2_3layer;
constraint (n_3_2_3layer = max((0.2081579864025116 * n_2_0_3layer + -0.21071237325668335 * n_2_1_3layer + 0.29632896184921265 * n_2_2_3layer + -0.17282555997371674 * n_2_3_3layer + -0.26173263788223267 * n_2_4_3layer + 0.10281311720609665 * n_2_5_3layer + 0.3036918640136719), 0));
var float: n_3_3_3layer;
constraint (n_3_3_3layer = max((-0.23167844116687775 * n_2_0_3layer + 0.06885077804327011 * n_2_1_3layer + 0.17779186367988586 * n_2_2_3layer + 0.046461645513772964 * n_2_3_3layer + 0.014406019821763039 * n_2_4_3layer + -0.11823713779449463 * n_2_5_3layer + -0.22785209119319916), 0));
var float: n_3_4_3layer;
constraint (n_3_4_3layer = max((-0.34205707907676697 * n_2_0_3layer + -0.06317513436079025 * n_2_1_3layer + 0.1399073749780655 * n_2_2_3layer + -0.055139921605587006 * n_2_3_3layer + -0.3620941638946533 * n_2_4_3layer + -0.06705980002880096 * n_2_5_3layer + 0.010900855995714664), 0));
var float: n_3_5_3layer;
constraint (n_3_5_3layer = max((0.19938454031944275 * n_2_0_3layer + 0.29160431027412415 * n_2_1_3layer + -0.3521007299423218 * n_2_2_3layer + 0.32527145743370056 * n_2_3_3layer + 0.026727158576250076 * n_2_4_3layer + 0.39179569482803345 * n_2_5_3layer + -0.14468611776828766), 0));
% Layer 4
var float: n_4_0_3layer;
constraint (n_4_0_3layer = (0.3889036774635315 * n_3_0_3layer + -0.3758948743343353 * n_3_1_3layer + -0.39799052476882935 * n_3_2_3layer + 0.3008168935775757 * n_3_3_3layer + -0.10936852544546127 * n_3_4_3layer + 0.5392680764198303 * n_3_5_3layer + -0.3824690878391266));
var float: n_4_1_3layer;
constraint (n_4_1_3layer = (-0.3504035472869873 * n_3_0_3layer + 0.5736353993415833 * n_3_1_3layer + 0.1951206922531128 * n_3_2_3layer + 0.205302432179451 * n_3_3_3layer + -0.06463745981454849 * n_3_4_3layer + 0.24649319052696228 * n_3_5_3layer + -0.601090669631958));
% Add activation function
constraint (success_ratio * (1 + exp(-n_4_0_3layer)) = 1.0);
constraint (spoil_ratio * (1 + exp(-n_4_1_3layer)) = 1.0);
